"use client";

import React, { useState } from "react";
import "@/styles/table.css";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";

interface TableRowData {
  id: number;
  inspectionResult: string; // –ù–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü "–†–µ–∑—É–ª—å—Ç–∞—Ç –ö–æ–Ω—Ç—Ä–æ–ª—è"
  operator: string;
  springType: string;
  height: number;
  outerDiameter: number;
  innerDiameter: number;
  perpendicularityDeviation: number;
  wireDiameter: number;
  controlDate: string;
}

const DataTable = ({ data }: { data: TableRowData[] }) => {
  const [selectedRowId, setSelectedRowId] = useState<number | null>(null);

  const handleRowClick = (id: number) => {
    setSelectedRowId(selectedRowId === id ? null : id);
  };

  return (
    <div className="table-container">
      {/* –û–±—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π */}
      <div className="table-scroll">
        <Table>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω */}
          <TableHeader className="table-header">
            <TableRow>
              <TableHead className="px-2 py-1">ID</TableHead>
              <TableHead className="px-2 py-1">–†–µ–∑—É–ª—å—Ç–∞—Ç –ö–æ–Ω—Ç—Ä–æ–ª—è</TableHead>
              <TableHead className="px-2 py-1">–û–ø–µ—Ä–∞—Ç–æ—Ä</TableHead>
              <TableHead className="px-2 py-1">–¢–∏–ø –ø—Ä—É–∂–∏–Ω—ã</TableHead>
              <TableHead className="px-2 py-1">–í—ã—Å–æ—Ç–∞</TableHead>
              <TableHead className="px-2 py-1">–ù–∞—Ä—É–∂–Ω—ã–π –î–∏–∞–º–µ—Ç—Ä</TableHead>
              <TableHead className="px-2 py-1">–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –î–∏–∞–º–µ—Ç—Ä</TableHead>
              <TableHead className="px-2 py-1">–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ</TableHead>
              <TableHead className="px-2 py-1">–î–∏–∞–º–µ—Ç—Ä –ü—Ä—É—Ç–∫–∞</TableHead>
              <TableHead className="px-2 py-1">–î–∞—Ç–∞ –ö–æ–Ω—Ç—Ä–æ–ª—è</TableHead>
            </TableRow>
          </TableHeader>

          {/* –¢–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã */}
          <TableBody>
            {data.map((row) => (
              <React.Fragment key={row.id}>
                <TableRow
                  className={`table-row cursor-pointer text-center ${
                    selectedRowId === row.id ? "bg-gray-200" : ""
                  }`}
                  onClick={() => handleRowClick(row.id)}
                >
                  <TableCell>{row.id}</TableCell>
                  <TableCell>{row.inspectionResult}</TableCell>
                  <TableCell>{row.operator}</TableCell>
                  <TableCell>{row.springType}</TableCell>
                  <TableCell>{row.height}</TableCell>
                  <TableCell>{row.outerDiameter}</TableCell>
                  <TableCell>{row.innerDiameter}</TableCell>
                  <TableCell>{row.perpendicularityDeviation}</TableCell>
                  <TableCell>{row.wireDiameter}</TableCell>
                  <TableCell>{row.controlDate}</TableCell>
                </TableRow>

                {/* –ó–∞–≥–ª—É—à–∫–∞ (–ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π) */}
                {selectedRowId === row.id && (
                  <TableRow className="bg-gray-100">
                    <TableCell colSpan={10} className="text-center p-4">
                      üîç –ó–¥–µ—Å—å –±—É–¥–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç—Ä–æ–ª–µ!
                    </TableCell>
                  </TableRow>
                )}
              </React.Fragment>
            ))}
          </TableBody>
        </Table>
      </div>
    </div>
  );
};

export default DataTable;
